x <- c(0.5,1.4,1.1,2.2,1.3,3.2,3.1,4.4,3.7,3,3.5,4.1)
y <- c(16.8,16.2,15.9,15.4,16.4,13.2,12.8,12.2,15,13.6,14.1,13.3)
# plot
plot(x,y,xlab="distance to center",ylab="rent",pch=19)
# Goldfeld-Quandt-Test
# Estimation for group inner-city (Observations 1...5)
regrC <- lm(y[1:5]~x[1:5])
SuuC <- sum(residuals(regrC)^2)
print(SuuC)
# Estimation for group suburban (Beobachtungen 6...12)
regrS <- lm(y[6:12]~x[6:12])
SuuS <- sum(residuals(regrS)^2)
print(SuuS)
print(paste("Test statistic F=",(SuuS/5)/(SuuC/3)))
print(paste("5% critical value =",qf(0.95,5,3)))
# White-Test
regr <- lm(y~x)
uhat <- residuals(regr)
aux <- lm(uhat~x+I(x^2))
print(summary(aux))
# Whites HC-Standardfehler
X <- cbind(1,x)
regr <- lm(y~X-1)
print(summary(regr))
uhat <- residuals(regr)
uhat
diag(uhat^2)
betahat <- solve(t(X)%*%X)%*%t(X)%*%y
uhat <- y- X%*%betahat
uhat1 <- residuals(regr)
uhat - uhat 1
uhat - uhat1
# data
x <- c(0.5,1.4,1.1,2.2,1.3,3.2,3.1,4.4,3.7,3,3.5,4.1)
# data
x <- c(0.5,1.4,1.1,2.2,1.3,3.2,3.1,4.4,3.7,3,3.5,4.1)
y <- c(16.8,16.2,15.9,15.4,16.4,13.2,12.8,12.2,15,13.6,14.1,13.3)
# plot
plot(x,y,xlab="distance to center",ylab="rent",pch=19)
regrC <- lm(y[1:5]~x[1:5])
SuuC <- sum(residuals(regrC)^2)
print(SuuC)
regrS <- lm(y[6:12]~x[6:12])
SuuS <- sum(residuals(regrS)^2)
print(SuuS)
print(paste("Test statistic F =",(SuuS/5)/(SuuC/3)))
print(paste("5% critical value =",qf(0.95,5,3)))
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
print(summary(aux))
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
print(summary(aux))
summary_aux <- summary(aux)
summary_aux <- summary(aux)
summary(aux)$
print(summary(aux))
aux <- lm(uhatsquared~x+I(x^2))
summary_aux <- summary(aux)
print(summary_aux)
TT <- length(uhatsquared)
summary_aux <- summary(aux)
summary_aux$r.squared*summ
summary_aux$r.squared*TT
print(paste("Test statistic R2*T =",summary_aux$r.squared*TT)
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
TT <- length(uhatsquared)
summary_aux <- summary(aux)
print(paste("Test statistic R2*T =",summary_aux$r.squared*TT)
print(paste("Test statistic R2*T =",summary_aux$r.squared*TT))
print(paste("Test statistic T R2 =",summary_aux$r.squared*TT))
print(paste("Test statistic T x R2 =",summary_aux$r.squared*TT))
print(paste("5% critical value =",qchisq(0.95,2)))
print(paste("Test statistic T x R2 =",summary_aux$r.squared*TT))
print(paste("5% critical value =",qchisq(0.95,2)))
print(summary_aux)
print(paste("Test statistic T x R2 =",summary_aux$r.squared*TT))
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
TT <- length(uhatsquared)
summary_aux <- summary(aux)
print(paste("Test statistic T x R2 =",summary_aux$r.squared*TT))
print(paste("5% critical value =",qchisq(0.95,2)))
print(summary_aux)
print(paste("p-value if test statistic =",pchisq(summary_aux$r.squared*TT,2)))
print(summary_aux)
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
TT <- length(uhatsquared)
summary_aux <- summary(aux)
TR2 <- summary_aux$r.squared*TT
print(paste("Test statistic T x R2 =",TR2))
print(paste("5% critical value =",qchisq(0.95,2)))
print(paste("p-value of test statistic =",pchisq(TR2,2)))
print(summary_aux)
regr <- lm(y~x)
uhatsquared <- residuals(regr)
aux <- lm(uhatsquared~x+I(x^2))
TT <- length(uhatsquared)
summary_aux <- summary(aux)
TR2 <- summary_aux$r.squared*TT
print(paste("Test statistic T x R2 =",TR2))
print(paste("5% critical value =",qchisq(0.95,2)))
print(paste("p-value of test statistic =",pchisq(TR2,2)))
print(summary_aux)
regr <- lm(y~x)
uhatsquared <- residuals(regr)^2
aux <- lm(uhatsquared~x+I(x^2))
TT <- length(uhatsquared)
summary_aux <- summary(aux)
TR2 <- summary_aux$r.squared*TT
print(paste("Test statistic T x R2 =",TR2))
print(paste("5% critical value =",qchisq(0.95,2)))
print(paste("p-value of test statistic =",pchisq(TR2,2)))
print(summary_aux)
X <- cbind(1,x) # make regressor matrix
betahat <- solve(t(X)%*%X)%*%t(X)%*%y
print(betahat)
uhat <- y-X%*%betahat
What <- diag(uhat^2)
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
X <- cbind(1,x) # make regressor matrix
betahat <- solve(t(X)%*%X)%*%t(X)%*%y #(X'X)^{-1}X'y
print(betahat) # betahat is unbiased
uhat <- y-X%*%betahat
What <- diag(uhat^2)
What
uhat
uhat^2
diag(uhat^2)
uhat^2
What <- diag(as.matrix(uhat^2))
What
rm(What)
What <- diag(uhat^2)
solve(t(X)%*%X)%*%t(X)
uhat.^2
uhat <- y-X%*%betahat
uhat
uhat^2
diag(uhat^2)
What <- diag(as.vector(uhat^2))
What
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
print(sqrt(diag(Covbetahat)))
summary(lm(y~x))
X <- cbind(1,x) # make regressor matrix
betahat <- solve(t(X)%*%X)%*%t(X)%*%y #(X'X)^{-1}X'y
print(betahat) # betahat is unbiased
uhat <- y-X%*%betahat
What <- diag(as.vector(uhat^2))
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
print(sqrt(diag(Covbetahat)))
summary(lm(y~x))
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
print(paste("HC standard errors =",sqrt(diag(Covbetahat))))
print(paste("HC standard error for alpha =",sqrt(diag(Covbetahat)[1])))
print(paste("HC standard error for alpha =",sqrt(diag(Covbetahat)[2])))
summary_aux$coefficients
print(paste("HC standard error for alpha =",sqrt(diag(Covbetahat)[1])))
print(paste("LS standard error for alpha =",summary(lm(y~x))$coefficients[1,2]))
print(paste("HC standard error for alpha =",sqrt(diag(Covbetahat)[1])))
print(paste("(Wrong) LS standard error for alpha =",summary(lm(y~x))$coefficients[1,2]))
print(paste("HC standard error for beta =",sqrt(diag(Covbetahat)[2])))
print(paste("(Wrong) LS standard error for beta =",summary(lm(y~x))$coefficients[2,2]))
X <- cbind(1,x) # make regressor matrix
betahat <- solve(t(X)%*%X)%*%t(X)%*%y #(X'X)^{-1}X'y, betahat is unbiased
uhat <- y-X%*%betahat
What <- diag(as.vector(uhat^2))
Covbetahat <- solve(t(X)%*%X)%*%t(X)%*%What%*%X%*%solve(t(X)%*%X)
print(paste("HC standard error for alpha =",sqrt(diag(Covbetahat)[1])))
print(paste("(Wrong) LS standard error for alpha =",summary(lm(y~x))$coefficients[1,2]))
print(paste("HC standard error for beta =",sqrt(diag(Covbetahat)[2])))
print(paste("(Wrong) LS standard error for beta =",summary(lm(y~x))$coefficients[2,2]))
price <- c(24.2,25.5,26.8,26.4,25.2,24.4,26.2,26.1,27.4,28.4,29.8,31.3,32.2,32.4,33.2,34,33.7,32.8,31.3,30.9,30,28.3,27.5,26.8)
quant <- c(1990,1630,1570,1960,2150,2450,2210,2400,2200,1270,1250,1500,1700,1450,1480,1450,1000,1080,1270,1520,1820,1660,1500,1810)
n <- length(price)
regr <- lm(quant~price)
uhat <- residuals(regr)
plot(price,quant,xlab="Price",ylab="Demand (quantity)",pch=19)
abline(regr)
regr <- lm(quant~price)
uhat <- residuals(regr)
plot(price,quant,xlab="Price",ylab="Demand (quantity)",pch=19)
abline(regr)
price <- c(24.2,25.5,26.8,26.4,25.2,24.4,26.2,26.1,27.4,28.4,29.8,31.3,32.2,32.4,33.2,34,33.7,32.8,31.3,30.9,30,28.3,27.5,26.8)
quant <- c(1990,1630,1570,1960,2150,2450,2210,2400,2200,1270,1250,1500,1700,1450,1480,1450,1000,1080,1270,1520,1820,1660,1500,1810)
n <- length(price)
regr <- lm(quant~price)
uhat <- residuals(regr)
plot(price,quant,xlab="Price",ylab="Demand (quantity)",pch=19)
abline(regr)
lines(price,quant,type="b")
plot(1:n,uhat,t="b",xlab="Month",ylab="Residual")
abline(h=0)
plot(uhat[-n],uhat[-1],xlab="lagged residual",ylab="residual",pch=19)
abline(h=0)
abline(v=0)
print(summary(lm(uhat[-1]~uhat[-n])))
X <- cbind(1,price) # make regressor matrix
y <- quant
n
z <- matrix(NA,199,2)
rho0 <- seq(-0.99,0.99,length=199)
ncol(X)
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X))
rho0 <- seq(-0.99,0.99,length=199)
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X)) # initialize output matrix
rho0 <- seq(-0.99,0.99,length=199)
for(i in 1:199) {
# create transformation matrix P
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
for(j in 2:n) P[j,(j-1)] <- -rho0[i]
P <- P/sqrt(1-rho0[i]^2)
# Transform variables
ystar <- P%*%y
Xstar <- P%*%X
# OLS on transformed variables
regr <- lm(Ystar~Xstar-1)
uhatstar <- residuals(regr)
z[i,] <- c(rho0[i],sum(uhatstar^2)*(1-rho0[i]^2))
}
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X)) # initialize output matrix
rho0 <- seq(-0.99,0.99,length=199)
for(i in 1:199) {
# create transformation matrix P
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
for(j in 2:n) P[j,(j-1)] <- -rho0[i]
P <- P/sqrt(1-rho0[i]^2)
# Transform variables
ystar <- P%*%y
Xstar <- P%*%X
# OLS on transformed variables
regr <- lm(ystar~Xstar-1)
uhatstar <- residuals(regr)
z[i,] <- c(rho0[i],sum(uhatstar^2)*(1-rho0[i]^2))
}
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X)) # initialize output matrix
rho0 <- seq(-0.99,0.99,length=199)
for(i in 1:199) {
# create transformation matrix P
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
for(j in 2:n) P[j,(j-1)] <- -rho0[i]
P <- P/sqrt(1-rho0[i]^2)
# Transform variables
ystar <- P%*%y
Xstar <- P%*%X
# OLS on transformed variables
regr <- lm(ystar~Xstar-1)
uhatstar <- residuals(regr)
Z[i,] <- c(rho0[i],sum(uhatstar^2)*(1-rho0[i]^2))
}
min(Z)
summary(Z)
apply(Z,2,min)
apply(Z,1,min)
Z
which.min(Z[,2])
rhostar <- Z[which.min(Z[,2]),1]
rhostar
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X)) # initialize output matrix
rho0 <- seq(-0.99,0.99,length=199)
for(i in 1:199) {
# create transformation matrix P
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
for(j in 2:n) P[j,(j-1)] <- -rho0[i]
P <- P/sqrt(1-rho0[i]^2)
# Transform variables
ystar <- P%*%y
Xstar <- P%*%X
# OLS on transformed variables
regr <- lm(ystar~Xstar-1)
uhatstar <- residuals(regr)
Z[i,] <- c(rho0[i],sum(uhatstar^2)*(1-rho0[i]^2))
}
rhostar <- Z[which.min(Z[,2]),1]
print(paste="The value of rho with minimum sum of squared residuals is ",rhostar))
print(paste="The value of rho with minimum sum of squared residuals is ",rhostar)
paste="The value of rho with minimum sum of squared residuals is ",rhostar)
print(paste("The value of rho with minimum sum of squared residuals is ",rhostar))
X <- cbind(1,price) # make regressor matrix
y <- quant
ngridpoints <- 199
Z <- matrix(NA,ngridpoints,ncol(X)) # initialize output matrix
rho0 <- seq(-0.99,0.99,length=199)
for(i in 1:199) {
# create transformation matrix P
P <- diag(n)
P[1,1] <- sqrt(1-rho0[i]^2)
for(j in 2:n) P[j,(j-1)] <- -rho0[i]
P <- P/sqrt(1-rho0[i]^2)
# Transform variables
ystar <- P%*%y
Xstar <- P%*%X
# OLS on transformed variables
regr <- lm(ystar~Xstar-1)
uhatstar <- residuals(regr)
Z[i,] <- c(rho0[i],sum(uhatstar^2)*(1-rho0[i]^2))
}
rhostar <- Z[which.min(Z[,2]),1]
print(paste("The value of rho with minimum sum of squared residuals is ",rhostar))
n <- 100
n <- 100
x <- runif(n)*50+10
y <- 0.5+0.1*x+rnorm(n)
xx <- x+rnorm(n)*15
plot(x,y,xlim=range(xx))
v <- locator(1)
abline(lm(y~x))
v <- locator(1)
points(xx,y,col="red")
for(i in 1:n) arrows(x[i],y[i],xx[i],y[i],lty="dotted")
v <- locator(1)
plot(x,y,xlim=range(xx))
points(xx,y,col="red")
abline(lm(y~x))
v <- locator(1)
abline(lm(y~xx),col="red")
n <- 100
x <- runif(n)*50+10
y <- 0.5+0.1*x+rnorm(n)
xx <- x+rnorm(n)*15
plot(x,y,xlim=range(xx))
v <- locator(1)
abline(lm(y~x))
v <- locator(1)
points(xx,y,col="red")
for(i in 1:n) arrows(x[i],y[i],xx[i],y[i],lty="dotted")
v <- locator(1)
plot(x,y,xlim=range(xx))
points(xx,y,col="red")
abline(lm(y~x))
v <- locator(1)
abline(lm(y~xx),col="red")
